openapi: 3.0.0
info:
  version: 1.0.0
  title: Oppdateringsgrensesnitt for SFKB
  description: |
    Grov oversikt over funksjonalitet:
      - Hente liste over tilgjengelige datasett 
      - Hente metadata for et bestemt datasett
      - Hente data fra et bestemt datasett
        - Med lesetilgang eller skrivetilgang (medfører låsing)
          - områdebegrensning
          - egenskapsspørring (begrenset i første versjon til bygningsnummer eller lokalid)
      - Lagre data til et bestemt datasett
        - Operasjoner som håndteres: nytt objekt, endre objekt og slett objekt
  contact:
    name: API Support
    url: http://www.example.com/support
    email: support@example.com
    
servers:
# Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/meastp/sfkb-api/1.0.0
  - url: http://sfkb.kartverket.no/v1
    description: Server hos Kartverket

security:
  - basicAuth: []  # <-- use the same name here
  
tags:
  - name: Metadata
    description: "Informasjon om dataset som brukeren har tilgang til"
  - name: features
    description: "Operasjoner på features i et bestemt dataset"
  - name: locks
    description: "Behandling av features som brukeren har låst"
paths:
  /datasets:
    get:
      tags:
       - Metadata
      summary: Hent liste over tilgjengelige dataset
      description: >-
        Henter en liste over alle dataset som brukeren har lese- eller skrivetilgang til.
      operationId: getDatasets
      responses:
        '200':      # Response
          description: OK
          content:  # Response body
            application/json:  # Media type
              schema: 
                type: array
                items:
                  $ref: '#/components/schemas/Dataset'    # Reference to object definition
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /datasets/{datasetId}:
    get:
      tags:
       - Metadata
      summary: Hent metadata for et bestemt dataset
      description: >-
        Henter utvidet informasjon om et bestemt dataset. Her ligger all informasjon som kommer ut i listen over dataset, og i tillegg en del ekstra informasjon som enten er unødvendig eller for tung å ha med i listen over dataset.
      operationId: getDatasetMetadata
      parameters:
        - in: path
          name: datasetId
          schema:
            type: string
            format: uuid
          required: true
          description: UUID of the dataset to get
      responses:
        '200':      # Response
          description: OK
          content:  # Response body
            application/json:  # Media type
             schema: 
               $ref: '#/components/schemas/Dataset'    # Reference to object definition
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /datasets/{datasetId}/features:
    get:
      tags:
       - features
      summary: Hent ut features fra et dataset
      description: >-
        Henter en liste over alle dataset som brukeren har lese- eller skrivetilgang til.
      operationId: getData
      parameters:
        - in: path
          name: datasetId
          schema:
            type: string
            format: uuid
          required: true
          description: UUID of the dataset to get
        - in: query
          name: lock
          schema:
            type: object
            properties:
              type:
                type: string
                enum: [user_lock,lock_id,optimistic_locking]
              id:
                type: integer
                minimum: 1
            required:
              - type
          description: |
            TODO: Beskrive låsing
        - in: query
          name: bbox
          schema:
            $ref: '#/components/schemas/BoundingBox' 
          description: |
            Henter ut objekter i et bestemt område (angitt med et rektangel)
            
            Dette kan være aktuelt for å få ut alle objekter som ikke er direkte knyttet til et objekt, som f.eks mønelinje og takkant til en bygning.
            
            Eksempel: Hent ut et 10x10m rektangel
            
            **TODO: Usikker på syntaks**
            
            ?bbox=(10,10,20,20)
            
        - in: query
          name: query
          schema:
            type: string
          description: |
            Filter på egenskaper og/eller objekttype for å begrense hvilke features som hentes ut.
            
            Dersom objekttypen ikke skal begrenses, kan den angis med `*`
            
            Eksempel: Hent en bygning med bestemt bygningsnummer
            
            `?query=eq(Bygning/bygningsnummer,1234)`
            
            Eksempel: Hent et objekt med bestemt lokalid
            
            `?query=eq(*/identifikasjon/lokalid,000a7b9b-7088-482f-a3cf-9761b97a54b6)`
            
            Merk: Når et objekt hentes ut med lokalid er det normalt ikke nødvendig å filtrere på objekttype, derfor er objekttypen angitt med `*`.
            
            Merk: Spørringer er foreløpig begrenset til eksemplene over, nemlig spørringer etter bygningsnummer og lokalid.
            
            Generell regel for egenskapsspørringer:
            
            For å angi hvilken objekttype og hvilket attributt (full struktur med struct-/liste-egenskaper) det spørres etter, bruker vi
            
            > \<objekttypenavn\>/\<attributtnavn\> [ / \<attributtnavn\> …]
          
            Hvis vi ikke ønsker å begrense spørringen til en bestemt objekttype, kan vi angi * som <objekttypenavn>.

            
            
      responses:
        '200':      # Response
          description: OK
          content: # Response body
            application/vnd.kartverket.sosi+gml:
             schema:
              type: object
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    post:
      tags:
       - features
      summary: Endre features i et dataset
      description: >-
        Henter en liste over alle dataset som brukeren har lese- eller skrivetilgang til.
      operationId: updateData
      parameters:
        - in: path
          name: datasetId
          schema:
            type: string
            format: uuid
          required: true
          description: UUID of the dataset to get
        - in: query
          name: lock
          schema:
            type: object
            properties:
              type:
                type: string
                enum: [user_lock,lock_id,optimistic_locking]
              id:
                type: integer
                minimum: 1
            required:
              - type
          description: |
            TODO: Beskrive låsing
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/vnd.kartverket.sosi+gml:
           schema:
            type: object
           
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /locks:
    get:
      tags:
       - locks
      summary: Hent liste over alle låser som brukeren har
      description: >-
        Henter en liste over alle låser som brukeren har.
      operationId: getAllLocks
      responses:
        '200':      # Response
          description: OK
          content:  # Response body
            application/json:  # Media type
              schema: 
                type: array
                items:
                  type: object
                  properties:
                    dataset:
                      type: string
                    locks:
                      $ref: '#/components/schemas/Dataset'    # Reference to object definition
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
  /locks/{datasetId}:
    get:
      tags:
       - locks
      summary: Hent informasjon om brukerens låste features i et bestemt dataset.
      description: |
        Henter bl.a. informasjon om hvilke objekter brukeren har låst i et bestemt dataset.
      operationId: getLocksForDataset
      parameters:
        - in: path
          name: datasetId
          schema:
            type: string
            format: uuid
          required: true
          description: UUID of the dataset to get
      responses:
        '200':      # Response
          description: OK
          content:  # Response body
            application/json:  # Media type
             schema: 
               $ref: '#/components/schemas/Locks'    # Reference to object definition
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
    delete:
      tags:
        - locks
      summary: Fjerne alle låser brukeren har i et bestemt dataset
      description: |
        Fjerne alle låser brukeren har i et bestemt dataset
      operationId: deleteLocksForDataset        
      parameters:
        - in: path
          name: datasetId
          schema:
            type: string
            format: uuid
          required: true
          description: UUID of the dataset to delete locks in
      responses:
        '204': # Success
          description: No Content
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
components:
  securitySchemes:
    basicAuth:     # <-- arbitrary name for the security scheme
      type: http
      scheme: basic
  responses:
    Unauthorized:
      description: Unauthorized
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Error'
    Forbidden:
      description: Forbidden
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: The specified resource was not found
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Error'
  schemas:
    Dataset:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        kommune:
          type: integer
        fylke:
          type: integer
        sone:
          type: integer
        #hele_landet som egen metadata?
        resolution:
          type: number
          format: double
        coordinate_reference_system:
          type: string
          # trenger kanskje å bruke pattern her, for å sikre riktig format
        read_only:
          type: boolean
        bbox: 
          $ref: '#/components/schemas/BoundingBox' 
      required:
        - id
        - name
        - coordinate_reference_system
        - read_only
        - bbox
    Locks:
      type: object
      properties:
        id:
          type: integer # TODO: OK å ha en låsenøkkelid som kan brukes som parameter i fremtiden?
        username:
          type: string
        schema:
          type: array
          items:
            type: object
            properties:
              lokalid:
                type: string
                format: uuid
    BoundingBox:
      type: object
      properties:
        ll:
          type: array
          minItems: 2
          maxItems: 2
          items:
            type: number
            format: double
        ur:
          type: array
          minItems: 2
          maxItems: 2
          items:
            type: number
            format: double
      example:
        ll: [10.0, 100.0]
        ur: [20.0, 200.0]
    # Schema for error response body
    Error:
      type: object
      properties:
        type:
          type: string
        title:
          type: string
        status:
          type: integer
        detail:
          type: string
        instance:
          type: string
      required:
        - type
        - title
